<!--  -->
<template>
  <view class="login">
    <view class="loginContent">
      <view>
        <text class="logoText">LS艺术界</text>
        <button type="primary" open-type="getUserInfo" bindgetuserinfo="vipLogin">VIP登录</button>
        <button class="vistorBtn" open-type="getUserInfo" bindgetuserinfo="vistorLogin">游客登录</button>
        <view class="normal regist" @tap="regist">没有账号，马上注册</view>
      </view>
      <view class="coverBox" wx:if="{{showLogin}}" @tap="hide">
        <view class="loginCheck" @tap.stop="show">
          <text>LS艺术界</text>
          <view class="msg">
            <input type="number" bindinput="setPhone" placeholder="输入VIP手机号码">
            <view class="authCode">
              <input type="number" bindinput="setAuthCode" class="authInput" placeholder="输入验证码">
              <button class="getCode" wx:if="{{!showTimeCount}}" @tap="getAuthCode">获取验证码</button>
              <button class="getCode" wx:if="{{showTimeCount}}">再次发送({{timeLeft}}s)</button>
            </view>
          </view>
          <button type="primary" class="auth" @tap="auth()">VIP登录</button>
        </view>
      </view>
      <view class="coverBox" wx:if="{{showRegist}}" @tap="hide">
        <view class="loginCheck" @tap.stop="regist">
          <text class="registTitle">用户注册</text>
          <view class="msg">
            <input class="username" bindinput="setName" placeholder="输入用户名/学员姓名">
            <input type="number" bindinput="setPhone" placeholder="输入手机号码">
            <view class="authCode">
              <input type="number" bindinput="setAuthCode" class="authInput" placeholder="输入验证码">
              <button class="getCode" wx:if="{{!showTimeCount}}" @tap="getAuthCode">获取验证码</button>
              <button class="getCode" wx:if="{{showTimeCount}}">再次发送({{timeLeft}}s)</button>
            </view>
          </view>
          <button
            type="primary"
            class="auth"
            open-type="getUserInfo"
            bindgetuserinfo="registSubmit"
          >提交注册</button>
        </view>
      </view>
    </view>
    <image class="loginBg" src="../resource/login_bg.jpg" mode="scaleToFill" lazy-load="false">
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '../tools/api.js';
export default class Index extends wepy.page {
  props = {};
  data = {
    showLogin: false,
    showRegist: false,
    showAuth: false,
    phoneNumber: '',
    authCode: '',
    username: '',
    showTimeCount: false,
    timeLeft: 60,
    countUtil: ''
  };
  components = {};
  methods = {
    //游客登录
    vistorLogin(val) {
      this.$parent.globalData.userInfo = val.detail.userInfo;
      this.$apply();
      this.vistorSubmit();
    },
    //vip登录
    vipLogin(val) {
      this.$parent.globalData.userInfo = val.detail.userInfo;
      this.$apply();
      this.login();
    },
    //提交注册
    registSubmit(val) {
      this.$parent.globalData.userInfo = val.detail.userInfo;
      this.$apply();
      this.registSubmit();
    },
    show() {
      this.showLogin = true;
    },
    hide() {
      this.showLogin = false;
      this.showRegist = false;
    },
    regist() {
      this.showRegist = true;
    },
    registSubmit() {
      console.log(this.$parent.globalData.userInfo);
      if (this.username == '') {
        wepy.showToast({
          title: '用户名不能为空',
          icon: 'none',
          duration: 1000
        });
        return;
      }
      if (this.phoneNumber == '') {
        wepy.showToast({
          title: '手机号码不能为空',
          icon: 'none',
          duration: 1000
        });
        return;
      }
      if (this.authCode == '') {
        wepy.showToast({
          title: '验证码不能为空',
          icon: 'none',
          duration: 1000
        });
        return;
      }
      api.login
        .regist({
          avatarUrl: this.$parent.globalData.userInfo.avatarUrl,
          name: this.username,
          nickname: this.$parent.globalData.userInfo.nickName,
          openid: this.$parent.globalData.openId,
          phone: this.phoneNumber,
          verificationCode: this.authCode,
          sex: this.$parent.globalData.userInfo.gender
        })
        .then(res => {
          if (res.data.code == 200) {
            wepy.showToast({
              title: '注册成功！',
              icon: 'none',
              duration: 1000
            });
            this.showTimeCount = false;
            this.timeLeft = 60;
            this.showRegist = false;
          } else {
            wepy.showToast({
              title: res.data.message,
              icon: 'none',
              duration: 1000
            });
          }
        });
    },

    auth() {
      //VIP登录
      api.login
        .vipLogin({
          avatarUrl: this.$parent.globalData.userInfo.avatarUrl,
          nickname: this.$parent.globalData.userInfo.nickName,
          openid: this.$parent.globalData.openId,
          phone: this.phoneNumber,
          verificationCode: this.authCode
        })
        .then(res => {
          if (res.data.code == 200) {
            clearInterval(this.countUtil);
            if (
              res.data.data.permission.role == '学生' ||
              res.data.data.permission.role == '学生家长' ||
              res.data.data.permission.role == '普通用户'
            ) {
              wepy.setStorageSync('role', 'student');
            } else {
              wepy.setStorageSync('role', 'teacher');
            }
            wepy.setStorageSync('token', res.data.data.token);
            wepy.setStorageSync('userId', res.data.data.appUser.id);
            wepy.setStorageSync('vipId', res.data.data.appUser.vipUserId);
            wepy.setStorageSync('userInfo', JSON.stringify(res.data.data));
            wepy.redirectTo({
              url: '/pages/home'
            });
          } else {
            wepy.showToast({
              title: res.data.message,
              icon: 'none',
              duration: 1000
            });
          }
        });
    },
    setPhone(e) {
      this.phoneNumber = e.detail.value;
    },
    setAuthCode(e) {
      this.authCode = e.detail.value;
    },
    setName(e) {
      this.username = e.detail.value;
    },
    //获取验证码
    async getAuthCode() {
      if (this.phoneNumber == '') {
        wepy.showToast({
          title: '手机号码不能为空',
          icon: 'none',
          duration: 1000
        });
      } else {
        let result = await api.login.getCode({
          phone: this.phoneNumber
        });
        if (result.data.code == 200) {
          wepy.showToast({
            title: '发送成功',
            icon: 'success',
            duration: 2000
          });
          this.showTimeCount = true;
          this.timeLeft = 60;
          this.countLeft();
          this.$apply();
        } else {
          wepy.showToast({
            title: result.data.message,
            icon: 'none',
            duration: 2000
          });
          this.showLogin = false;
          this.$apply();
        }
      }
    }
  };
  countLeft() {
    let _self = this;
    _self.countUtil = setInterval(() => {
      if (_self.timeLeft > 1) {
        _self.timeLeft -= 1;
        this.$apply();
      } else {
        clearInterval(_self.countUtil);
        this.showTimeCount = false;
        this.$apply();
      }
    }, 1000);
    this.$apply();
  }
  //游客登录
  vistorSubmit() {
    //游客登录
    api.login
      .vistorLogin({
        avatarUrl: this.$parent.globalData.userInfo.avatarUrl,
        nickName: this.$parent.globalData.userInfo.nickName,
        openid: this.$parent.globalData.openId
      })
      .then(res => {
        if (res.data.code == 200) {
          wepy.setStorageSync('role', 'vistor');
          wepy.setStorageSync('token', res.data.data.token);
          wepy.setStorageSync('userId', res.data.data.appUser.id);
          wepy.setStorageSync('vipId', null);
          wepy.setStorageSync('userInfo', JSON.stringify(res.data.data));
          wepy.redirectTo({
            url: '/pages/home'
          });
        } else {
          wepy.showToast({
            title: res.data.message,
            icon: 'none',
            duration: 1000
          });
        }
      });
  }
  //进入登录
  async login() {
    let vipId = await wepy.getStorageSync('vipId');
    if (!vipId || vipId == 'null') {
      this.showLogin = true;
      this.$apply();
    } else {
      api.login
        .refresh({
          openid: this.$parent.globalData.openId
        })
        .then(res => {
          // wepy.setStorageSync('role', 'teacher')
          if (res.data.code === 200) {
            wepy.setStorageSync('token', res.data.data);
            wepy.redirectTo({
              url: '/pages/home'
            });
          } else {
            wepy.showToast({
              title: res.data.message,
              icon: 'none',
              duration: 1000
            });
          }
        });
    }
  }
  events = {};
  watch = {};
  computed = {};
  async onLoad() {
    let _self = this;
    wepy.setStorageSync(
      'playState',
      JSON.stringify({
        name: '',
        url: ''
      })
    );
    let downloadFile = await wepy.getStorageSync('downloadFile');
    if (downloadFile == '') {
      wepy.setStorageSync('downloadFile', '[]');
    }
  }
  onShow() {}
}
</script>

<style lang='less'>
.login {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  .loginContent {
    z-index: 6;
  }
  .loginBg {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 5;
  }
  .coverBox {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 6;
    .loginCheck {
      width: 80%;
      height: 600rpx;
      background: #fff;
      display: flex;
      flex-flow: column;
      justify-content: space-around;
      align-items: center;
      .registTitle {
        font-size: 20px;
      }
      .msg {
        padding: 0 12%;
        input {
          height: 2rem;
          border: solid 1px #ddd;
          padding: 0 0.5rem;
          font-size: 14px;
        }
        .username {
          margin-bottom: 0.5rem;
        }
        .authCode {
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-top: 0.5rem;
          height: 2rem;
          .getCode {
            font-size: 12px;
            width: 7rem;
          }
          .authInput {
            flex: 1;
            margin-right: 0.5rem;
            height: 2rem;
          }
        }
      }
      .tips {
        padding: 1rem;
        font-size: 14px;
        color: #353535;
      }
    }
  }
  .normal {
    margin-top: 1rem;
    color: #fff;
    text-align: center;
    font-size: 14px;
  }
  .vistorBtn {
    background: transparent;
    border: none;
    outline: none;
    color: #fff;
  }
  .regist {
    width: 100%;
    text-align: center;
    position: absolute;
    bottom: 100rpx;
    color: #999;
    left: 0;
  }
  .second {
    .loginCheck {
      width: 68%;
      height: 400rpx;
      border-radius: 4px;
    }
  }
  .logoText {
    font-size: 42px;
    color: #fff;
    margin-bottom: 8rem;
    display: block;
  }
}
</style>