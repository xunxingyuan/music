<!--  -->
<template>
  <view class='musciPlay'>
    <view class='playCtrl'>
      <view wx:if="{{!playState}}" class='btn' @tap='playAudio'><i class="iconfont icon-play1"></i></view>
      <view wx:if="{{playState}}" class='btn' @tap='pauseAudio'><i class="iconfont icon-pause"></i></view>
      <view class="img"><i class="iconfont icon-MusicAcc"></i></view>
      </image>
      <view class='ctrl'>
        <view class='intro'><view class='introText'>{{current.name}}</view> <text wx:if="{{showTime}}">{{nowTime}}—{{totalTime}}</text></view>
        <slider @change="sliderChange" value="{{(now/total)*100}}" min="0" max="100" block-size='14' />
        <!-- <view class='slide' @tap='jump'>
            <view class="inner" style="width:{{(now/total)*100}}%">
            </view>
            <view class="icon">
            </view>
          </view> -->
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  export default class MusicPlay extends wepy.component {
    config = {
      navigationBarTitleText: "",
    };
    props = {
      musicSrc: String
    };
    data = {
      current: {
        poster: 'http://y.gtimg.cn/music/photo_new/T002R300x300M000003rsKF44GyaSk.jpg?max_age=2592000',
        name: '此时此刻',
        author: '许巍',
        src: 'http://ws.stream.qqmusic.qq.com/M500001VfvsJ21xFqb.mp3?guid=ffffffff82def4af4b12b3cd9337d5e7&uin=346897220&vkey=6292F51E1E384E06DCBDC9AB7C49FD713D632D313AC4858BACB8DDD29067D3C601481D36E62053BF8DFEAF74C0A5CCFADD6471160CAF3E6A&fromtag=46',
      },
      audioAction: {
        method: 'pause'
      },
      innerAudioContext: '',
      //播放状态
      playState: false,
      //播放时间显示
      showTime: false,
      //当前播放时间
      now: 1,
      //总时长
      total: 100
    };
    components = {};
    methods = {
      audioPlayed(e) {
        console.log('audio is played')
      },
      playAudio() {
        this.innerAudioContext.play()
        this.playState = true
      },
      pauseAudio() {
        this.innerAudioContext.pause()
        this.playState = false
        this.showTime = true
        this.$apply()
      },
      sliderChange(e) {
        let jump = (e.detail.value / 100) * this.total
        this.innerAudioContext.seek(Math.floor(jump))
        this.now = Math.floor(jump)
      }
    };
    events = {
      'srcChange': (val) => {
        this.innerAudioContext.pause()
        this.innerAudioContext.src = val.url
        this.now = 0
        this.current.name = val.name
        this.playState = false
        this.showTime = false
      }
    };
    watch = {};
    computed = {
      nowTime: function() {
        let min = Math.floor(this.now / 60)
        let left = this.now % 60
        if (left < 10) {
          left = '0' + left
        }
        if (min < 10) {
          min = '0' + min
        }
        let time = min + ':' + left
        return time
      },
      totalTime: function() {
        let min = Math.floor(this.total / 60)
        let left = this.total % 60
        if (left < 10) {
          left = '0' + left
        }
        if (min < 10) {
          min = '0' + min
        }
        let time = min + ':' + left
        return time
      }
    };
    async onLoad() {
      let _self = this
      if(this.innerAudioContext!==''){
        this.innerAudioContext.destroy()
      }
      this.innerAudioContext = wx.createInnerAudioContext()
      this.innerAudioContext.onPlay((res) => {
        console.log('开始播放')
        _self.showTime = true
      })
      this.innerAudioContext.onTimeUpdate(() => {
        _self.now = Number(_self.innerAudioContext.currentTime.toFixed(0))
        _self.total = Number(_self.innerAudioContext.duration.toFixed(0))
        this.$apply()
      })
    };
    onShow() {};
    onUnload () {
      // this.innerAudioContext.destroy()
    };
  }
</script>

<style lang='less'>
  .musciPlay {
    position: fixed;
    bottom: 0;
    left: 0;
    height: 130rpx;
    width: 100%;
    display: flex;
    .playCtrl {
      flex: 1;
      height: 100%;
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: flex-start;
      background: #333;
      color: #fff;
      box-sizing: border-box;
      padding: 5px 10px;
      .btn {
        width: 2rem;
        font-size: 14px;
        text-align: center;
        margin-right: 5px;
        i {
          font-size: 28px;
        }
      }
      .img {
        display: flex;
        align-items: center;
        justify-content: center;
        background: #fff; // border: solid 1px rgb(202, 185, 185);
        padding: 2px;
        i {
          font-size: 46px;
          color: rgb(49, 170, 226);
        }
      }
      .ctrl {
        flex: 1;
        position: relative;
        .intro {
          font-size: 14px;
          padding: 0 1rem;
          margin-bottom: 0.5rem;
          color: #D0B485;
          display: flex;
          align-items: center;
          .introText{
            max-width: 60%;
            overflow: hidden;
            height: 1rem;
          }
          text {
            margin-left: 10px;
            color: #fff;
            font-size: 12px;
          }
        }
        .slide {
          width: 100%;
          height: 4px;
          background: #ddd;
          display: flex;
          align-items: center;
          position: relative;
          .inner {
            height: 4px;
            background: green;
          }
          .icon {
            width: 12px;
            height: 12px;
            border-radius: 6px;
            background: gray;
          }
        }
      }
      .showtime {
        font-size: 12px;
      }
    }
  }
</style>