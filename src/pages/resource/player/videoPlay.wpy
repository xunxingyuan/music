<!--  -->
<template>
  <view class='videoPlay'>
    <video hidden="{{showInput}}" class='show' src="{{videoSrc}}" controls="true" objectFit="contain"></video>
    <view class='videoTitle'>{{videoTitle}}</view>
    <view hidden="{{showInput}}" class='ctrl'>
      <view class='item' @tap="downloadSrc">
        <image class='icon' src="{{imgList.download1}}" mode="scaleToFill" lazy-load="true">
        </image>
        {{videoMsg.downloadCount}}
      </view>
      <view class='item'>
        <image @tap="collectVideo" wx:if="{{!videoMsg.isUserCollect}}" class='icon' src="{{imgList.collect}}" mode="scaleToFill" lazy-load="false">
        </image>
        <image wx:if="{{videoMsg.isUserCollect}}" class='icon' src="{{imgList.collect1}}" mode="scaleToFill" lazy-load="false">
        </image>
        {{videoMsg.collectCount}}
      </view>
      <view class='item' @tap="addComment">
        <image class='icon' src="{{imgList.message1}}" mode="scaleToFill" lazy-load="true">
        </image>
        {{videoMsg.commentCount}}
      </view>
      <view class='item'>
        <image class='icon' @tap="likeVideo" wx:if="{{!videoMsg.isUserLike}}" src="{{imgList.like}}" mode="scaleToFill" lazy-load="false">
        </image>
        <image class='icon' wx:if="{{videoMsg.isUserLike}}" src="{{imgList.like2}}" mode="scaleToFill" lazy-load="false">
        </image>
        {{videoMsg.likeCount}}
      </view>
    </view>
    <view class='submitComments' wx:if="{{showInput}}">
      <textarea bindinput='setComment' value="{{commentText}}" placeholder="输入评论内容" />
      <button @tap="submit" classs="submit" type="primary">提交</button>
      <button @tap="cancel" class="cancel" type="defult">取消</button>
    </view>
    <scroll-view class='comment' hidden="{{showInput}}">
      <view class='title'>
        评论
      </view>
      <view class='tips' wx:if="{{commentList.length == 0}}">暂无评论</view>
      <repeat for="{{commentList}}" key="index" index="index" item="item">
        <view class='commentItem'>
          <view class='top flex'>
            <view class='user flex'>
              <image class='userIcon' src="{{item.appUser.avatarUrl}}" mode="aspectFill" lazy-load="true">
              </image>
              <view>
                <view class='name'>{{item.appUser.nickname}}</view>
                <view class='time'>{{item.createTime}}</view>
              </view>
            </view>
            <view class='flex'>
              <image @tap="likeComment({{item}})" class='icon' src="{{imgList.like}}" mode="scaleToFill" lazy-load="false">
              </image>
              {{item.likeCount}}</view>
          </view>
          <view class='bot'>{{item.content}}</view>
        </view>
      </repeat>
    </scroll-view>
  </view>
</template>

<script>
  Date.prototype.Format = function(fmt) { //author: meizz
    var o = {
      "M+": this.getMonth() + 1, //月份
      "d+": this.getDate(), //日
      "h+": this.getHours(), //小时
      "m+": this.getMinutes(), //分
      "s+": this.getSeconds(), //秒
      "q+": Math.floor((this.getMonth() + 3) / 3), //季度
      "S": this.getMilliseconds() //毫秒
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
      if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
  }
  import wepy from 'wepy';
  import api from '@/tools/api.js'
  export default class VideoPlay extends wepy.page {
    config = {
      navigationBarTitleText: "返回",
    };
    data = {
      imgList:'',
      videoId: '',
      videoTitle: '',
      videoSrc: 'http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&bizid=1023&hy=SH&fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400',
      icon: '../../../resource/images.png',
      commentList: [],
      showInput: false,
      commentText: '',
      videoMsg: {
        collectCount: 0,
        commentCount: 0,
        downloadCount: 0,
        isUserCollect: false,
        isUserLike: false,
        likeCount: 0,
      },
      permission: ''
    };
    components = {};
    methods = {
      addComment() {
        console.log(this.permission);
        if (this.permission.comment == 'yes') {
          this.showInput = true
        } else {
          wepy.showToast({
            title: '权限不足', //提示的内容,
            icon: 'none', //图标,
            duration: 2000, //延迟时间,
            mask: true, //显示透明蒙层，防止触摸穿透,
            success: res => {}
          });
        }
      },
      cancel() {
        this.showInput = false
      },
      async submit() {
        let _self = this
        let userId = await wepy.getStorageSync('userId');
        api.comment.addComment({
          content: _self.commentText,
          userId: userId,
          videoId: _self.videoId,
          videoTitle: _self.videoTitle
        }).then((res) => {
          if (res.data.code === 200) {
            _self.showInput = false
            wepy.showToast({
              title: '发表评论成功',
              icon: 'success',
              duration: 1000
            })
            _self.videoMsg.commentCount += 1
            _self.getVideoComment(_self.videoId)
            _self.$apply()
          }
        })
      },
      setComment(e) {
        this.commentText = e.detail.value
      },
      async downloadSrc() {
        let _self = this
        let userId = await wepy.getStorageSync('userId');
        console.log('add download')
        if (this.permission.download == 'yes') {
          api.video.saveDownload({
            userId: userId,
            videoId: this.videoId
          }).then((res) => {
            wepy.showToast({
              title: '加入下载成功', //提示的内容,
              icon: 'success', //图标,
              duration: 2000, //延迟时间,
              mask: true, //显示透明蒙层，防止触摸穿透,
              success: res => {}
            });
          })
          let token = await wepy.getStorageSync('token');
          let downloadFile = await wepy.getStorageSync('downloadFile');
          let header = {}
          header['Authorization'] = 'Bearer ' + token
          header['Content-Type'] = 'video/mp4'
          const downloadTask = wepy.downloadFile({
            url: _self.videoSrc, // 下载资源的 url
            header: header,
            success: res => {
              console.log(res)
              let downloadData = JSON.parse(downloadFile)
              let downloadSrc = {
                name: _self.videoTitle,
                videoId: _self.videoId,
                url: res.tempFilePath,
                downloadTime: new Date().Format("yyyy-MM-dd hh:mm:ss"),
                type: 'video'
              }
              downloadData.push(downloadSrc)
              wepy.setStorageSync('downloadFile', JSON.stringify(downloadData))
              // wepy.saveFile({
              //   tempFilePath: res.tempFilePath, //需要保存的文件的临时路径,
              //   success: res => {}
              // });
            },
            fail: () => {},
            complete: () => {
              wepy.showToast({
                title: '下载完成', //提示的内容,
                icon: 'success', //图标,
                duration: 2000, //延迟时间,
                mask: true, //显示透明蒙层，防止触摸穿透,
                success: res => {}
              });
            }
          });
        } else {
          wepy.showToast({
            title: '权限不足', //提示的内容,
            icon: 'none', //图标,
            duration: 2000, //延迟时间,
            mask: true, //显示透明蒙层，防止触摸穿透,
            success: res => {}
          });
        }
        // downloadTask.onProgressUpdate((res) => {
        //   console.log('下载进度', res.progress)
        //   console.log('已经下载的数据长度', res.totalBytesWritten)
        //   console.log('预期需要下载的数据总长度', res.totalBytesExpectedToWrite)
        // })
      },
      async collectVideo() {
        let _self = this
        let userId = await wepy.getStorageSync('userId');
        if (this.permission.collect == 'yes') {
          api.collect.collectVideo({
            userId: userId,
            videoId: this.videoId
          }).then((res) => {
            if (res.data.code === 200) {
              _self.videoMsg.isUserCollect = true
              _self.videoMsg.collectCount += 1
              _self.$apply()
            }
          })
        } else {
          wepy.showToast({
            title: '权限不足', //提示的内容,
            icon: 'none', //图标,
            duration: 2000, //延迟时间,
            mask: true, //显示透明蒙层，防止触摸穿透,
            success: res => {}
          });
        }
      },
      async likeVideo() {
        let _self = this
        let userId = await wepy.getStorageSync('userId');
        api.video.likeVideo({
          userId: userId,
          videoId: this.videoId
        }).then((res) => {
          if (res.data.code === 200) {
            _self.videoMsg.isUserLike = true
            _self.videoMsg.likeCount += 1
            _self.$apply()
          }
        })
      },
      async likeComment(item) {
        let _self = this
        let userId = await wepy.getStorageSync('userId');
        api.video.likeVideoComments({
          userId: userId,
          commentId: item.id
        }).then((res) => {
          if (res.data.code === 200) {
            _self.getVideoComment(_self.videoId)
            wepy.showToast({
              title: '点赞成功',
              icon: 'success',
            })
          } else {
            wepy.showToast({
              title: res.data.message,
              icon: 'none',
            })
          }
        })
      }
    };
    events = {};
    watch = {};
    computed = {};
    async onLoad(options) {
      this.videoId = options.id
      let userId = await wepy.getStorageSync('userId');
      let userInfo = await wepy.getStorageSync('userInfo');
      this.permission = JSON.parse(userInfo).permission
      if (options.url.split('ttp:').length > 1) {
        this.videoSrc = options.url
      } else {
        this.videoSrc = 'http://192.168.100.246:9501' + options.url
      }
      this.getVideoComment(options.id)
      this.getVideoDetail(options.id, userId)
      this.imgList = this.$parent.globalData.imgList
      this.$apply()
      
    };
    onShow() {};
    getVideoComment(id) {
      let _self = this
      api.comment.getVideoComment({
        videoId: id
      }).then((res) => {
        if (res.data.code === 200) {
          _self.commentList = res.data.data
        }
        _self.$apply()
      })
    }
    getVideoDetail(id, userId) {
      let _self = this
      api.video.getVideoByID({
        userId: userId,
        videoId: id
      }).then((res) => {
        if (res.statusCode === 200) {
          _self.videoMsg.collectCount = res.data.collectCount
          _self.videoMsg.commentCount = res.data.commentCount
          _self.videoMsg.downloadCount = res.data.downloadCount
          _self.videoMsg.isUserCollect = res.data.isUserCollect
          _self.videoMsg.isUserLike = res.data.isUserLike
          _self.videoMsg.likeCount = res.data.likeCount
          _self.videoTitle = res.data.video.title
          _self.$apply()
        }
      })
    }
  }
</script>

<style lang='less'>
  .videoPlay {
    display: flex;
    flex-flow: column;
    .show {
      width: 100%;
    }
    .videoTitle{
      height: 1.8rem;
      line-height: 1.8rem;
      background: #fff;
      padding-left: 1rem;
      color:#353535;
    }
    .ctrl {
      width: 100%;
      height: 80rpx;
      min-height: 80rpx;
      background: #fff;
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: flex-start;
      padding-left: 1rem;
      .item {
        margin-right: 1.5rem;
        color: #666;
        display: flex;
        align-items: center;
        .icon {
          margin-right: 5px;
          width: 1rem;
          height: 1rem;
        }
      }
    }
    .comment {
      flex: 1;
      color: #888;
      font-size: 16px;
      .title {
        height: 100rpx;
        line-height: 100rpx;
        padding-left: 1rem;
      }
      .tips {
        text-align: center;
        margin-top: 2rem;
      }
      .commentItem {
        padding: 0 1rem;
        padding-bottom: 1rem;
        padding-top: 0.5rem;
        border-bottom: solid 1px #DEDEE1;
        .top {
          justify-content: space-between;
          .user {
            .userIcon {
              width: 60px;
              height: 60px;
              border-radius: 30px;
              margin-right: 1rem;
            }
            .name {
              color: #666;
              font-size: 14px;
              margin-bottom: 0.5rem;
            }
            .time {
              color: #bbb;
              font-size: 12px;
            }
          }
          .icon {
            width: 1rem;
            height: 1rem;
            margin-right: 5px;
          }
        }
        .bot {
          color: #353535;
          margin-top: 8px;
        }
      }
    }
    .submitComments {
      position: fixed;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      background: #f9f9f9;
      z-index: 1000;
      padding: 1rem;
      box-sizing: border-box;
      textarea {
        border: solid 1px #ddd;
        width: auto;
        background: #fff;
        height: 8.5rem;
        padding: 0.7rem;
        font-size: 16px;
        color: #353535;
      }
      button {
        margin: 1rem 0;
      }
    }
  }
</style>