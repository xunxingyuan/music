<!--  -->
<template>
  <view class='login'>
    <view>
      <button @tap="login" open-type="getUserInfo">VIP登录</button>
      <view class='normal' @tap="auth(3)" open-type="getUserInfo">游客登录</view>
    </view>
    <view class='coverBox' wx:if="{{showLogin}}">
      <view class='loginCheck'>
        <text>律声云课堂</text>
        <view class='msg'>
          <input bindinput='setPhone' placeholder='输入VIP手机号码' />
          <view class='authCode'>
            <input bindinput='setAuthCode' class='authInput' placeholder='输入验证码' />
            <button class='getCode' wx:if="{{!showTimeCount}}" @tap='getAuthCode'>获取验证码</button>
            <button class='getCode' wx:if="{{showTimeCount}}">再次发送({{timeLeft}}s)</button>
          </view>
        </view>
        <button class='auth' @tap="auth(1)">VIP登录</button>
      </view>
    </view>
    <view class='coverBox' wx:if="{{showAuth}}">
      <view class='loginCheck'>
        <text class='tips'>为提供更优质的服务，小程序需要您的授权</text>
        <button open-type="getUserInfo" bindgetuserinfo="getAuth">授权</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import api from '../tools/api.js'
  export default class Index extends wepy.page {
    props = {};
    data = {
      showLogin: false,
      num: 20,
      showAuth: false,
      phoneNumber: '',
      authCode: '',
      showTimeCount: false,
      timeLeft: 60,
      countUtil: ''
    };
    components = {};
    methods = {
      login() {
        this.showLogin = true
        this.num++
      },
      auth(num) {
        switch (num) {
          case '3':
            //游客登录
            api.login.vistorLogin({
              avatarUrl: this.$parent.globalData.userInfo.avatarUrl,
              nickname: this.$parent.globalData.userInfo.nickName,
              openid: this.$parent.globalData.openId,
            }).then((res) => {
              if (res.data.code == 200) {
                wepy.setStorageSync('role', 'vistor')
                wepy.setStorageSync('token', res.data.data.token)
                wepy.setStorageSync('userId', res.data.data.appUser.id)
                wepy.redirectTo({
                  url: '/pages/home'
                });
              } else {
                wepy.showToast({
                  title: res.data.message,
                  icon: 'none',
                  duration: 1000
                })
              }
            })
            break;
          case '1':
            api.login.vipLogin({
              avatarUrl: this.$parent.globalData.userInfo.avatarUrl,
              nickname: this.$parent.globalData.userInfo.nickName,
              openid: this.$parent.globalData.openId,
              phone: this.phoneNumber,
              verificationCode: this.authCode
            }).then((res) => {
              if (res.data.code == 200) {
                clearInterval(this.countUtil)
                wepy.setStorageSync('role', 'teacher')
                wepy.setStorageSync('token', res.data.data.token)
                wepy.setStorageSync('userId', res.data.data.appUser.id)
                wepy.setStorageSync('vipId', res.data.data.appUser.vipUserId)
                wepy.redirectTo({
                  url: '/pages/home'
                });
              } else {
                wepy.showToast({
                  title: res.data.message,
                  icon: 'none',
                  duration: 1000
                })
              }
            })
            break;
          case '2':
            wepy.setStorageSync('role', 'student')
            wepy.redirectTo({
              url: '/pages/home'
            });
            break;
          default:
            break;
        }
      },
      //获取鉴权
      getAuth(e) {
        if (e.detail.userInfo) {
          this.$parent.globalData.userInfo = e.detail.userInfo
          this.showAuth = false
        }
      },
      setPhone(e) {
        this.phoneNumber = e.detail.value
      },
      setAuthCode(e) {
        this.authCode = e.detail.value
      },
      //获取验证码
      async getAuthCode() {
        let result = await api.login.getCode({
          phone: this.phoneNumber
        })
        if (result.data.code == 200) {
          wepy.showToast({
            title: result.data.message,
            icon: 'success',
            duration: 2000
          })
          this.showTimeCount = true
          this.timeLeft = 60
          this.countLeft()
          this.$apply()
        } else {
          wepy.showToast({
            title: result.data.message,
            icon: 'none',
            duration: 2000
          })
          this.showLogin = false
          this.$apply()
        }
      }
    };
    countLeft() {
      let _self = this
      _self.countUtil = setInterval(() => {
        if (_self.timeLeft > 1) {
          _self.timeLeft -= 1
          this.$apply()
        } else {
          clearInterval(_self.countUtil)
          this.showTimeCount = false
          this.$apply()
        }
      }, 1000)
      this.$apply()
    }
    events = {};
    watch = {};
    computed = {};
    async onLoad() {
      let _self = this
      await wx.getSetting({
        success: (res) => {
          if (res.authSetting['scope.userInfo']) {
            _self.showAuth = false
          } else {
            _self.showAuth = true
          }
          this.$apply()
          /*
           * res.authSetting = {
           *   "scope.userInfo": true,
           *   "scope.userLocation": true
           * }
           */
        }
      })
    }
    onShow() {}
  }
</script>

<style lang='less'>
  .login {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    .coverBox {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      background: rgba(0, 0, 0, 0.7);
      display: flex;
      align-items: center;
      justify-content: center;
      .loginCheck {
        width: 80%;
        height: 600rpx;
        background: #fff;
        display: flex;
        flex-flow: column;
        justify-content: space-around;
        align-items: center;
        .msg {
          padding: 0 12%;
          input {
            height: 2rem;
            border: solid 1px #ddd;
            padding: 0 0.5rem;
            font-size: 14px;
          }
          .authCode {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 0.5rem;
            height: 2rem;
            .getCode {
              font-size: 12px;
              width: 6rem;
            }
            .authInput {
              flex: 1;
              margin-right: 0.5rem;
              height: 2rem;
            }
          }
        }
        .tips {
          padding: 1rem;
          font-size: 14px;
          color: #353535;
        }
      }
    }
    .normal {
      margin-top: 1rem;
      color: #666;
      text-align: center;
      font-size: 14px;
    }
  }
</style>